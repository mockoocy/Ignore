# Generated from src/grammar/ignoreLexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,46,421,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
        7,45,2,46,7,46,2,47,7,47,2,48,7,48,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,
        2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,
        3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,
        6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,
        8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,
        11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,
        12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,5,14,193,8,14,10,14,12,
        14,196,9,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,5,15,207,
        8,15,10,15,12,15,210,9,15,1,15,1,15,1,16,1,16,5,16,216,8,16,10,16,
        12,16,219,9,16,1,16,3,16,222,8,16,1,17,4,17,225,8,17,11,17,12,17,
        226,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
        1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,
        1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,23,1,23,
        1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,
        1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,28,1,28,1,28,1,29,1,29,
        1,29,1,29,1,30,4,30,309,8,30,11,30,12,30,310,1,30,1,30,1,31,1,31,
        1,31,1,31,1,31,1,31,1,31,1,31,1,31,3,31,324,8,31,1,32,1,32,1,33,
        1,33,5,33,330,8,33,10,33,12,33,333,9,33,1,33,1,33,1,34,1,34,1,35,
        1,35,1,36,1,36,1,37,3,37,344,8,37,1,37,4,37,347,8,37,11,37,12,37,
        348,1,38,3,38,352,8,38,1,38,4,38,355,8,38,11,38,12,38,356,1,38,1,
        38,5,38,361,8,38,10,38,12,38,364,9,38,1,39,1,39,1,40,1,40,1,41,1,
        41,1,42,1,42,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,44,1,
        44,3,44,385,8,44,1,45,1,45,1,45,1,45,3,45,391,8,45,1,46,1,46,1,46,
        1,46,5,46,397,8,46,10,46,12,46,400,9,46,1,46,1,46,1,46,1,46,1,46,
        1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,5,48,415,8,48,10,48,12,48,
        418,9,48,1,48,1,48,3,194,331,398,0,49,2,0,4,0,6,1,8,2,10,3,12,4,
        14,5,16,6,18,7,20,8,22,9,24,10,26,11,28,12,30,13,32,14,34,0,36,15,
        38,16,40,17,42,18,44,19,46,20,48,21,50,22,52,23,54,24,56,25,58,26,
        60,27,62,28,64,29,66,30,68,31,70,32,72,33,74,34,76,35,78,36,80,37,
        82,38,84,39,86,40,88,41,90,42,92,43,94,44,96,45,98,46,2,0,1,7,1,
        0,48,57,2,0,10,10,13,13,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,
        122,82,0,32,32,8986,8987,9193,9196,9200,9200,9203,9203,9725,9726,
        9748,9749,9800,9811,9855,9855,9875,9875,9889,9889,9898,9899,9917,
        9918,9924,9925,9934,9934,9940,9940,9962,9962,9970,9971,9973,9973,
        9978,9978,9981,9981,9989,9989,9994,9995,10024,10024,10060,10060,
        10062,10062,10067,10069,10071,10071,10133,10135,10160,10160,10175,
        10175,11035,11036,11088,11088,11093,11093,126980,126980,127183,127183,
        127374,127374,127377,127386,127462,127487,127489,127489,127514,127514,
        127535,127535,127538,127542,127544,127546,127568,127569,127744,127776,
        127789,127797,127799,127868,127870,127891,127904,127946,127951,127955,
        127968,127984,127988,127988,127992,128062,128064,128064,128066,128252,
        128255,128317,128331,128334,128336,128359,128378,128378,128405,128406,
        128420,128420,128507,128591,128640,128709,128716,128716,128720,128722,
        128725,128727,128732,128735,128747,128748,128756,128764,128992,129003,
        129008,129008,129292,129338,129340,129349,129351,129535,129648,129660,
        129664,129672,129680,129725,129727,129733,129742,129755,129760,129768,
        129776,129784,3,0,9,10,13,13,32,32,2,0,60,60,62,62,436,0,6,1,0,0,
        0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,0,0,16,1,0,0,
        0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,0,0,26,1,0,0,
        0,0,28,1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,
        0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,
        0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,
        0,0,60,1,0,0,0,1,62,1,0,0,0,1,64,1,0,0,0,1,66,1,0,0,0,1,68,1,0,0,
        0,1,70,1,0,0,0,1,72,1,0,0,0,1,74,1,0,0,0,1,76,1,0,0,0,1,78,1,0,0,
        0,1,80,1,0,0,0,1,82,1,0,0,0,1,84,1,0,0,0,1,86,1,0,0,0,1,88,1,0,0,
        0,1,90,1,0,0,0,1,92,1,0,0,0,1,94,1,0,0,0,1,96,1,0,0,0,1,98,1,0,0,
        0,2,100,1,0,0,0,4,102,1,0,0,0,6,104,1,0,0,0,8,114,1,0,0,0,10,126,
        1,0,0,0,12,130,1,0,0,0,14,136,1,0,0,0,16,144,1,0,0,0,18,150,1,0,
        0,0,20,157,1,0,0,0,22,165,1,0,0,0,24,170,1,0,0,0,26,177,1,0,0,0,
        28,185,1,0,0,0,30,188,1,0,0,0,32,202,1,0,0,0,34,221,1,0,0,0,36,224,
        1,0,0,0,38,230,1,0,0,0,40,240,1,0,0,0,42,251,1,0,0,0,44,256,1,0,
        0,0,46,259,1,0,0,0,48,261,1,0,0,0,50,269,1,0,0,0,52,283,1,0,0,0,
        54,287,1,0,0,0,56,298,1,0,0,0,58,300,1,0,0,0,60,303,1,0,0,0,62,308,
        1,0,0,0,64,323,1,0,0,0,66,325,1,0,0,0,68,327,1,0,0,0,70,336,1,0,
        0,0,72,338,1,0,0,0,74,340,1,0,0,0,76,343,1,0,0,0,78,351,1,0,0,0,
        80,365,1,0,0,0,82,367,1,0,0,0,84,369,1,0,0,0,86,371,1,0,0,0,88,373,
        1,0,0,0,90,384,1,0,0,0,92,390,1,0,0,0,94,392,1,0,0,0,96,406,1,0,
        0,0,98,410,1,0,0,0,100,101,7,0,0,0,101,3,1,0,0,0,102,103,5,45,0,
        0,103,5,1,0,0,0,104,105,5,60,0,0,105,106,5,102,0,0,106,107,5,117,
        0,0,107,108,5,110,0,0,108,109,5,99,0,0,109,110,5,116,0,0,110,111,
        5,105,0,0,111,112,5,111,0,0,112,113,5,110,0,0,113,7,1,0,0,0,114,
        115,5,60,0,0,115,116,5,47,0,0,116,117,5,102,0,0,117,118,5,117,0,
        0,118,119,5,110,0,0,119,120,5,99,0,0,120,121,5,116,0,0,121,122,5,
        105,0,0,122,123,5,111,0,0,123,124,5,110,0,0,124,125,5,62,0,0,125,
        9,1,0,0,0,126,127,5,60,0,0,127,128,5,105,0,0,128,129,5,102,0,0,129,
        11,1,0,0,0,130,131,5,60,0,0,131,132,5,47,0,0,132,133,5,105,0,0,133,
        134,5,102,0,0,134,135,5,62,0,0,135,13,1,0,0,0,136,137,5,60,0,0,137,
        138,5,47,0,0,138,139,5,101,0,0,139,140,5,108,0,0,140,141,5,105,0,
        0,141,142,5,102,0,0,142,143,5,62,0,0,143,15,1,0,0,0,144,145,5,60,
        0,0,145,146,5,101,0,0,146,147,5,108,0,0,147,148,5,105,0,0,148,149,
        5,102,0,0,149,17,1,0,0,0,150,151,5,60,0,0,151,152,5,101,0,0,152,
        153,5,108,0,0,153,154,5,115,0,0,154,155,5,101,0,0,155,156,5,62,0,
        0,156,19,1,0,0,0,157,158,5,60,0,0,158,159,5,47,0,0,159,160,5,101,
        0,0,160,161,5,108,0,0,161,162,5,115,0,0,162,163,5,101,0,0,163,164,
        5,62,0,0,164,21,1,0,0,0,165,166,5,60,0,0,166,167,5,118,0,0,167,168,
        5,97,0,0,168,169,5,114,0,0,169,23,1,0,0,0,170,171,5,60,0,0,171,172,
        5,47,0,0,172,173,5,118,0,0,173,174,5,97,0,0,174,175,5,114,0,0,175,
        176,5,62,0,0,176,25,1,0,0,0,177,178,5,116,0,0,178,179,5,121,0,0,
        179,180,5,112,0,0,180,181,5,101,0,0,181,182,5,61,0,0,182,183,1,0,
        0,0,183,184,3,34,16,0,184,27,1,0,0,0,185,186,3,22,10,0,186,187,3,
        34,16,0,187,29,1,0,0,0,188,189,5,47,0,0,189,190,5,42,0,0,190,194,
        1,0,0,0,191,193,9,0,0,0,192,191,1,0,0,0,193,196,1,0,0,0,194,195,
        1,0,0,0,194,192,1,0,0,0,195,197,1,0,0,0,196,194,1,0,0,0,197,198,
        5,42,0,0,198,199,5,47,0,0,199,200,1,0,0,0,200,201,6,14,0,0,201,31,
        1,0,0,0,202,203,5,47,0,0,203,204,5,47,0,0,204,208,1,0,0,0,205,207,
        8,1,0,0,206,205,1,0,0,0,207,210,1,0,0,0,208,206,1,0,0,0,208,209,
        1,0,0,0,209,211,1,0,0,0,210,208,1,0,0,0,211,212,6,15,0,0,212,33,
        1,0,0,0,213,217,7,2,0,0,214,216,7,3,0,0,215,214,1,0,0,0,216,219,
        1,0,0,0,217,215,1,0,0,0,217,218,1,0,0,0,218,222,1,0,0,0,219,217,
        1,0,0,0,220,222,7,4,0,0,221,213,1,0,0,0,221,220,1,0,0,0,222,35,1,
        0,0,0,223,225,7,5,0,0,224,223,1,0,0,0,225,226,1,0,0,0,226,224,1,
        0,0,0,226,227,1,0,0,0,227,228,1,0,0,0,228,229,6,17,0,0,229,37,1,
        0,0,0,230,231,5,60,0,0,231,232,5,112,0,0,232,233,5,114,0,0,233,234,
        5,111,0,0,234,235,5,103,0,0,235,236,5,114,0,0,236,237,5,97,0,0,237,
        238,5,109,0,0,238,239,5,62,0,0,239,39,1,0,0,0,240,241,5,60,0,0,241,
        242,5,47,0,0,242,243,5,112,0,0,243,244,5,114,0,0,244,245,5,111,0,
        0,245,246,5,103,0,0,246,247,5,114,0,0,247,248,5,97,0,0,248,249,5,
        109,0,0,249,250,5,62,0,0,250,41,1,0,0,0,251,252,5,60,0,0,252,253,
        5,47,0,0,253,254,1,0,0,0,254,255,3,34,16,0,255,43,1,0,0,0,256,257,
        5,60,0,0,257,258,3,34,16,0,258,45,1,0,0,0,259,260,3,34,16,0,260,
        47,1,0,0,0,261,262,5,110,0,0,262,263,5,97,0,0,263,264,5,109,0,0,
        264,265,5,101,0,0,265,266,5,61,0,0,266,267,1,0,0,0,267,268,3,34,
        16,0,268,49,1,0,0,0,269,270,5,114,0,0,270,271,5,101,0,0,271,272,
        5,116,0,0,272,273,5,117,0,0,273,274,5,114,0,0,274,275,5,110,0,0,
        275,276,5,84,0,0,276,277,5,121,0,0,277,278,5,112,0,0,278,279,5,101,
        0,0,279,280,5,61,0,0,280,281,1,0,0,0,281,282,3,34,16,0,282,51,1,
        0,0,0,283,284,3,34,16,0,284,285,5,58,0,0,285,286,3,34,16,0,286,53,
        1,0,0,0,287,288,5,99,0,0,288,289,5,111,0,0,289,290,5,110,0,0,290,
        291,5,100,0,0,291,292,5,105,0,0,292,293,5,116,0,0,293,294,5,105,
        0,0,294,295,5,111,0,0,295,296,5,110,0,0,296,297,5,61,0,0,297,55,
        1,0,0,0,298,299,5,62,0,0,299,57,1,0,0,0,300,301,3,34,16,0,301,302,
        5,61,0,0,302,59,1,0,0,0,303,304,5,123,0,0,304,305,1,0,0,0,305,306,
        6,29,1,0,306,61,1,0,0,0,307,309,7,5,0,0,308,307,1,0,0,0,309,310,
        1,0,0,0,310,308,1,0,0,0,310,311,1,0,0,0,311,312,1,0,0,0,312,313,
        6,30,0,0,313,63,1,0,0,0,314,315,5,70,0,0,315,316,5,97,0,0,316,317,
        5,108,0,0,317,318,5,115,0,0,318,324,5,101,0,0,319,320,5,84,0,0,320,
        321,5,114,0,0,321,322,5,117,0,0,322,324,5,101,0,0,323,314,1,0,0,
        0,323,319,1,0,0,0,324,65,1,0,0,0,325,326,3,34,16,0,326,67,1,0,0,
        0,327,331,5,34,0,0,328,330,9,0,0,0,329,328,1,0,0,0,330,333,1,0,0,
        0,331,332,1,0,0,0,331,329,1,0,0,0,332,334,1,0,0,0,333,331,1,0,0,
        0,334,335,5,34,0,0,335,69,1,0,0,0,336,337,5,58,0,0,337,71,1,0,0,
        0,338,339,5,40,0,0,339,73,1,0,0,0,340,341,5,41,0,0,341,75,1,0,0,
        0,342,344,3,4,1,0,343,342,1,0,0,0,343,344,1,0,0,0,344,346,1,0,0,
        0,345,347,3,2,0,0,346,345,1,0,0,0,347,348,1,0,0,0,348,346,1,0,0,
        0,348,349,1,0,0,0,349,77,1,0,0,0,350,352,3,4,1,0,351,350,1,0,0,0,
        351,352,1,0,0,0,352,354,1,0,0,0,353,355,3,2,0,0,354,353,1,0,0,0,
        355,356,1,0,0,0,356,354,1,0,0,0,356,357,1,0,0,0,357,358,1,0,0,0,
        358,362,5,46,0,0,359,361,3,2,0,0,360,359,1,0,0,0,361,364,1,0,0,0,
        362,360,1,0,0,0,362,363,1,0,0,0,363,79,1,0,0,0,364,362,1,0,0,0,365,
        366,5,61,0,0,366,81,1,0,0,0,367,368,5,42,0,0,368,83,1,0,0,0,369,
        370,5,47,0,0,370,85,1,0,0,0,371,372,5,43,0,0,372,87,1,0,0,0,373,
        374,5,45,0,0,374,89,1,0,0,0,375,376,5,61,0,0,376,385,5,61,0,0,377,
        378,5,33,0,0,378,385,5,61,0,0,379,380,5,62,0,0,380,385,5,61,0,0,
        381,385,7,6,0,0,382,383,5,60,0,0,383,385,5,61,0,0,384,375,1,0,0,
        0,384,377,1,0,0,0,384,379,1,0,0,0,384,381,1,0,0,0,384,382,1,0,0,
        0,385,91,1,0,0,0,386,387,5,38,0,0,387,391,5,38,0,0,388,389,5,124,
        0,0,389,391,5,124,0,0,390,386,1,0,0,0,390,388,1,0,0,0,391,93,1,0,
        0,0,392,393,5,47,0,0,393,394,5,42,0,0,394,398,1,0,0,0,395,397,9,
        0,0,0,396,395,1,0,0,0,397,400,1,0,0,0,398,399,1,0,0,0,398,396,1,
        0,0,0,399,401,1,0,0,0,400,398,1,0,0,0,401,402,5,42,0,0,402,403,5,
        47,0,0,403,404,1,0,0,0,404,405,6,46,0,0,405,95,1,0,0,0,406,407,5,
        125,0,0,407,408,1,0,0,0,408,409,6,47,2,0,409,97,1,0,0,0,410,411,
        5,47,0,0,411,412,5,47,0,0,412,416,1,0,0,0,413,415,8,1,0,0,414,413,
        1,0,0,0,415,418,1,0,0,0,416,414,1,0,0,0,416,417,1,0,0,0,417,419,
        1,0,0,0,418,416,1,0,0,0,419,420,6,48,0,0,420,99,1,0,0,0,19,0,1,194,
        208,217,221,226,310,323,331,343,348,351,356,362,384,390,398,416,
        3,6,0,0,5,1,0,5,0,0
    ]

class ignoreLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    expr = 1

    FUNCTION_TAG_OPEN = 1
    FUNCTION_TAG_END = 2
    IF_TAG = 3
    IF_END = 4
    ELIF_END = 5
    ELIF_TAG = 6
    ELSE = 7
    ELSE_END = 8
    VAR_DECL_START = 9
    VAR_DECL_END = 10
    VAR_DECL_TYPE = 11
    VAR_DECL = 12
    COMMENT = 13
    LINE_COMMENT = 14
    WS = 15
    OPEN_PROGRAM = 16
    CLOSE_PROGRAM = 17
    CLOSE_TAG = 18
    OPEN_TAG = 19
    TAG_REFERENCE = 20
    FUNCTION_NAME = 21
    FUNCTION_RET_TYPE = 22
    FUNCTION_PARAM = 23
    CONDITION_EQ = 24
    END_TAG = 25
    PROPERTY_NAME = 26
    OPEN_CURLY = 27
    EXPR_WS = 28
    LITERAL_BOOL = 29
    NAME = 30
    LITERAL_STRING = 31
    COLON = 32
    OPEN_PAREN = 33
    CLOSE_PAREN = 34
    LITERAL_INT = 35
    LITERAL_FLOAT = 36
    EQUALS = 37
    MUL = 38
    DIV = 39
    ADD = 40
    SUB = 41
    OPERATOR_COMPARE = 42
    OPERATOR_LOGIC = 43
    EXPR_COMMENT = 44
    CLOSE_CURLY = 45
    EXPR_LINE_COMMENT = 46

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "expr" ]

    literalNames = [ "<INVALID>",
            "'<function'", "'</function>'", "'<if'", "'</if>'", "'</elif>'", 
            "'<elif'", "'<else>'", "'</else>'", "'<var'", "'</var>'", "'<program>'", 
            "'</program>'", "'condition='", "'>'", "'{'", "':'", "'('", 
            "')'", "'='", "'*'", "'/'", "'+'", "'-'", "'}'" ]

    symbolicNames = [ "<INVALID>",
            "FUNCTION_TAG_OPEN", "FUNCTION_TAG_END", "IF_TAG", "IF_END", 
            "ELIF_END", "ELIF_TAG", "ELSE", "ELSE_END", "VAR_DECL_START", 
            "VAR_DECL_END", "VAR_DECL_TYPE", "VAR_DECL", "COMMENT", "LINE_COMMENT", 
            "WS", "OPEN_PROGRAM", "CLOSE_PROGRAM", "CLOSE_TAG", "OPEN_TAG", 
            "TAG_REFERENCE", "FUNCTION_NAME", "FUNCTION_RET_TYPE", "FUNCTION_PARAM", 
            "CONDITION_EQ", "END_TAG", "PROPERTY_NAME", "OPEN_CURLY", "EXPR_WS", 
            "LITERAL_BOOL", "NAME", "LITERAL_STRING", "COLON", "OPEN_PAREN", 
            "CLOSE_PAREN", "LITERAL_INT", "LITERAL_FLOAT", "EQUALS", "MUL", 
            "DIV", "ADD", "SUB", "OPERATOR_COMPARE", "OPERATOR_LOGIC", "EXPR_COMMENT", 
            "CLOSE_CURLY", "EXPR_LINE_COMMENT" ]

    ruleNames = [ "DIGIT", "NEGATIVE_SIGN", "FUNCTION_TAG_OPEN", "FUNCTION_TAG_END", 
                  "IF_TAG", "IF_END", "ELIF_END", "ELIF_TAG", "ELSE", "ELSE_END", 
                  "VAR_DECL_START", "VAR_DECL_END", "VAR_DECL_TYPE", "VAR_DECL", 
                  "COMMENT", "LINE_COMMENT", "ID", "WS", "OPEN_PROGRAM", 
                  "CLOSE_PROGRAM", "CLOSE_TAG", "OPEN_TAG", "TAG_REFERENCE", 
                  "FUNCTION_NAME", "FUNCTION_RET_TYPE", "FUNCTION_PARAM", 
                  "CONDITION_EQ", "END_TAG", "PROPERTY_NAME", "OPEN_CURLY", 
                  "EXPR_WS", "LITERAL_BOOL", "NAME", "LITERAL_STRING", "COLON", 
                  "OPEN_PAREN", "CLOSE_PAREN", "LITERAL_INT", "LITERAL_FLOAT", 
                  "EQUALS", "MUL", "DIV", "ADD", "SUB", "OPERATOR_COMPARE", 
                  "OPERATOR_LOGIC", "EXPR_COMMENT", "CLOSE_CURLY", "EXPR_LINE_COMMENT" ]

    grammarFileName = "ignoreLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


