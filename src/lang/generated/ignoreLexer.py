# Generated from src/grammar/ignoreLexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,58,517,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
        7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,
        2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,
        7,58,2,59,7,59,2,60,7,60,2,61,7,61,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,
        1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,
        3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
        6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,
        1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,
        1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,
        1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,
        1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,
        1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,
        1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,
        5,24,301,8,24,10,24,12,24,304,9,24,1,24,1,24,1,24,1,24,1,24,1,25,
        1,25,1,25,1,25,5,25,315,8,25,10,25,12,25,318,9,25,1,25,1,25,1,26,
        1,26,5,26,324,8,26,10,26,12,26,327,9,26,1,26,3,26,330,8,26,1,27,
        4,27,333,8,27,11,27,12,27,334,1,27,1,27,1,28,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,
        1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,32,1,32,
        1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,
        1,35,1,35,1,35,1,35,3,35,387,8,35,1,36,1,36,1,36,1,36,1,37,1,37,
        1,38,4,38,396,8,38,11,38,12,38,397,1,38,1,38,1,39,1,39,1,39,1,39,
        1,39,1,39,1,39,1,39,1,39,3,39,411,8,39,1,40,1,40,1,41,1,41,5,41,
        417,8,41,10,41,12,41,420,9,41,1,41,1,41,1,42,1,42,1,43,1,43,1,44,
        1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,49,1,49,1,50,1,50,
        1,51,1,51,1,51,1,52,1,52,1,53,1,53,1,54,4,54,450,8,54,11,54,12,54,
        451,1,55,4,55,455,8,55,11,55,12,55,456,1,55,1,55,5,55,461,8,55,10,
        55,12,55,464,9,55,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,3,
        56,475,8,56,1,57,1,57,1,57,1,57,3,57,481,8,57,1,58,1,58,1,58,1,58,
        3,58,487,8,58,1,59,1,59,1,59,1,59,5,59,493,8,59,10,59,12,59,496,
        9,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,60,1,61,1,61,1,61,
        1,61,5,61,511,8,61,10,61,12,61,514,9,61,1,61,1,61,3,302,418,494,
        0,62,2,1,4,2,6,3,8,4,10,5,12,6,14,7,16,8,18,9,20,10,22,11,24,12,
        26,0,28,0,30,13,32,14,34,15,36,16,38,17,40,18,42,19,44,20,46,21,
        48,22,50,23,52,24,54,0,56,25,58,26,60,27,62,28,64,29,66,30,68,31,
        70,32,72,33,74,34,76,35,78,36,80,37,82,38,84,39,86,40,88,41,90,42,
        92,43,94,44,96,45,98,46,100,47,102,48,104,49,106,50,108,0,110,51,
        112,52,114,53,116,54,118,55,120,56,122,57,124,58,2,0,1,7,2,0,10,
        10,13,13,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,82,0,32,32,
        8986,8987,9193,9196,9200,9200,9203,9203,9725,9726,9748,9749,9800,
        9811,9855,9855,9875,9875,9889,9889,9898,9899,9917,9918,9924,9925,
        9934,9934,9940,9940,9962,9962,9970,9971,9973,9973,9978,9978,9981,
        9981,9989,9989,9994,9995,10024,10024,10060,10060,10062,10062,10067,
        10069,10071,10071,10133,10135,10160,10160,10175,10175,11035,11036,
        11088,11088,11093,11093,126980,126980,127183,127183,127374,127374,
        127377,127386,127462,127487,127489,127489,127514,127514,127535,127535,
        127538,127542,127544,127546,127568,127569,127744,127776,127789,127797,
        127799,127868,127870,127891,127904,127946,127951,127955,127968,127984,
        127988,127988,127992,128062,128064,128064,128066,128252,128255,128317,
        128331,128334,128336,128359,128378,128378,128405,128406,128420,128420,
        128507,128591,128640,128709,128716,128716,128720,128722,128725,128727,
        128732,128735,128747,128748,128756,128764,128992,129003,129008,129008,
        129292,129338,129340,129349,129351,129535,129648,129660,129664,129672,
        129680,129725,129727,129733,129742,129755,129760,129768,129776,129784,
        3,0,9,10,13,13,32,32,1,0,48,57,2,0,60,60,62,62,531,0,2,1,0,0,0,0,
        4,1,0,0,0,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,
        1,0,0,0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,
        1,0,0,0,0,30,1,0,0,0,0,32,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,
        1,0,0,0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,
        1,0,0,0,0,50,1,0,0,0,0,52,1,0,0,0,0,56,1,0,0,0,0,58,1,0,0,0,0,60,
        1,0,0,0,0,62,1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,70,
        1,0,0,0,0,72,1,0,0,0,0,74,1,0,0,0,1,76,1,0,0,0,1,78,1,0,0,0,1,80,
        1,0,0,0,1,82,1,0,0,0,1,84,1,0,0,0,1,86,1,0,0,0,1,88,1,0,0,0,1,90,
        1,0,0,0,1,92,1,0,0,0,1,94,1,0,0,0,1,96,1,0,0,0,1,98,1,0,0,0,1,100,
        1,0,0,0,1,102,1,0,0,0,1,104,1,0,0,0,1,106,1,0,0,0,1,110,1,0,0,0,
        1,112,1,0,0,0,1,114,1,0,0,0,1,116,1,0,0,0,1,118,1,0,0,0,1,120,1,
        0,0,0,1,122,1,0,0,0,1,124,1,0,0,0,2,126,1,0,0,0,4,130,1,0,0,0,6,
        136,1,0,0,0,8,144,1,0,0,0,10,150,1,0,0,0,12,157,1,0,0,0,14,165,1,
        0,0,0,16,170,1,0,0,0,18,177,1,0,0,0,20,185,1,0,0,0,22,188,1,0,0,
        0,24,195,1,0,0,0,26,204,1,0,0,0,28,211,1,0,0,0,30,214,1,0,0,0,32,
        217,1,0,0,0,34,222,1,0,0,0,36,229,1,0,0,0,38,239,1,0,0,0,40,251,
        1,0,0,0,42,260,1,0,0,0,44,270,1,0,0,0,46,278,1,0,0,0,48,292,1,0,
        0,0,50,296,1,0,0,0,52,310,1,0,0,0,54,329,1,0,0,0,56,332,1,0,0,0,
        58,338,1,0,0,0,60,348,1,0,0,0,62,359,1,0,0,0,64,364,1,0,0,0,66,367,
        1,0,0,0,68,369,1,0,0,0,70,380,1,0,0,0,72,382,1,0,0,0,74,388,1,0,
        0,0,76,392,1,0,0,0,78,395,1,0,0,0,80,410,1,0,0,0,82,412,1,0,0,0,
        84,414,1,0,0,0,86,423,1,0,0,0,88,425,1,0,0,0,90,427,1,0,0,0,92,429,
        1,0,0,0,94,431,1,0,0,0,96,433,1,0,0,0,98,435,1,0,0,0,100,437,1,0,
        0,0,102,439,1,0,0,0,104,441,1,0,0,0,106,444,1,0,0,0,108,446,1,0,
        0,0,110,449,1,0,0,0,112,454,1,0,0,0,114,474,1,0,0,0,116,480,1,0,
        0,0,118,486,1,0,0,0,120,488,1,0,0,0,122,502,1,0,0,0,124,506,1,0,
        0,0,126,127,5,60,0,0,127,128,5,105,0,0,128,129,5,102,0,0,129,3,1,
        0,0,0,130,131,5,60,0,0,131,132,5,47,0,0,132,133,5,105,0,0,133,134,
        5,102,0,0,134,135,5,62,0,0,135,5,1,0,0,0,136,137,5,60,0,0,137,138,
        5,47,0,0,138,139,5,101,0,0,139,140,5,108,0,0,140,141,5,105,0,0,141,
        142,5,102,0,0,142,143,5,62,0,0,143,7,1,0,0,0,144,145,5,60,0,0,145,
        146,5,101,0,0,146,147,5,108,0,0,147,148,5,105,0,0,148,149,5,102,
        0,0,149,9,1,0,0,0,150,151,5,60,0,0,151,152,5,101,0,0,152,153,5,108,
        0,0,153,154,5,115,0,0,154,155,5,101,0,0,155,156,5,62,0,0,156,11,
        1,0,0,0,157,158,5,60,0,0,158,159,5,47,0,0,159,160,5,101,0,0,160,
        161,5,108,0,0,161,162,5,115,0,0,162,163,5,101,0,0,163,164,5,62,0,
        0,164,13,1,0,0,0,165,166,5,60,0,0,166,167,5,118,0,0,167,168,5,97,
        0,0,168,169,5,114,0,0,169,15,1,0,0,0,170,171,5,60,0,0,171,172,5,
        47,0,0,172,173,5,118,0,0,173,174,5,97,0,0,174,175,5,114,0,0,175,
        176,5,62,0,0,176,17,1,0,0,0,177,178,5,116,0,0,178,179,5,121,0,0,
        179,180,5,112,0,0,180,181,5,101,0,0,181,182,5,61,0,0,182,183,1,0,
        0,0,183,184,3,54,26,0,184,19,1,0,0,0,185,186,3,14,6,0,186,187,3,
        54,26,0,187,21,1,0,0,0,188,189,5,60,0,0,189,190,5,119,0,0,190,191,
        5,104,0,0,191,192,5,105,0,0,192,193,5,108,0,0,193,194,5,101,0,0,
        194,23,1,0,0,0,195,196,5,60,0,0,196,197,5,47,0,0,197,198,5,119,0,
        0,198,199,5,104,0,0,199,200,5,105,0,0,200,201,5,108,0,0,201,202,
        5,101,0,0,202,203,5,62,0,0,203,25,1,0,0,0,204,205,5,60,0,0,205,206,
        5,98,0,0,206,207,5,114,0,0,207,208,5,101,0,0,208,209,5,97,0,0,209,
        210,5,107,0,0,210,27,1,0,0,0,211,212,5,47,0,0,212,213,5,62,0,0,213,
        29,1,0,0,0,214,215,3,26,12,0,215,216,3,28,13,0,216,31,1,0,0,0,217,
        218,5,60,0,0,218,219,5,102,0,0,219,220,5,111,0,0,220,221,5,114,0,
        0,221,33,1,0,0,0,222,223,5,60,0,0,223,224,5,47,0,0,224,225,5,102,
        0,0,225,226,5,111,0,0,226,227,5,114,0,0,227,228,5,62,0,0,228,35,
        1,0,0,0,229,230,5,60,0,0,230,231,5,102,0,0,231,232,5,117,0,0,232,
        233,5,110,0,0,233,234,5,99,0,0,234,235,5,116,0,0,235,236,5,105,0,
        0,236,237,5,111,0,0,237,238,5,110,0,0,238,37,1,0,0,0,239,240,5,60,
        0,0,240,241,5,47,0,0,241,242,5,102,0,0,242,243,5,117,0,0,243,244,
        5,110,0,0,244,245,5,99,0,0,245,246,5,116,0,0,246,247,5,105,0,0,247,
        248,5,111,0,0,248,249,5,110,0,0,249,250,5,62,0,0,250,39,1,0,0,0,
        251,252,5,60,0,0,252,253,5,114,0,0,253,254,5,101,0,0,254,255,5,116,
        0,0,255,256,5,117,0,0,256,257,5,114,0,0,257,258,5,110,0,0,258,259,
        5,62,0,0,259,41,1,0,0,0,260,261,5,60,0,0,261,262,5,47,0,0,262,263,
        5,114,0,0,263,264,5,101,0,0,264,265,5,116,0,0,265,266,5,117,0,0,
        266,267,5,114,0,0,267,268,5,110,0,0,268,269,5,62,0,0,269,43,1,0,
        0,0,270,271,5,110,0,0,271,272,5,97,0,0,272,273,5,109,0,0,273,274,
        5,101,0,0,274,275,5,61,0,0,275,276,1,0,0,0,276,277,3,54,26,0,277,
        45,1,0,0,0,278,279,5,114,0,0,279,280,5,101,0,0,280,281,5,116,0,0,
        281,282,5,117,0,0,282,283,5,114,0,0,283,284,5,110,0,0,284,285,5,
        84,0,0,285,286,5,121,0,0,286,287,5,112,0,0,287,288,5,101,0,0,288,
        289,5,61,0,0,289,290,1,0,0,0,290,291,3,54,26,0,291,47,1,0,0,0,292,
        293,3,54,26,0,293,294,5,58,0,0,294,295,3,54,26,0,295,49,1,0,0,0,
        296,297,5,47,0,0,297,298,5,42,0,0,298,302,1,0,0,0,299,301,9,0,0,
        0,300,299,1,0,0,0,301,304,1,0,0,0,302,303,1,0,0,0,302,300,1,0,0,
        0,303,305,1,0,0,0,304,302,1,0,0,0,305,306,5,42,0,0,306,307,5,47,
        0,0,307,308,1,0,0,0,308,309,6,24,0,0,309,51,1,0,0,0,310,311,5,47,
        0,0,311,312,5,47,0,0,312,316,1,0,0,0,313,315,8,0,0,0,314,313,1,0,
        0,0,315,318,1,0,0,0,316,314,1,0,0,0,316,317,1,0,0,0,317,319,1,0,
        0,0,318,316,1,0,0,0,319,320,6,25,0,0,320,53,1,0,0,0,321,325,7,1,
        0,0,322,324,7,2,0,0,323,322,1,0,0,0,324,327,1,0,0,0,325,323,1,0,
        0,0,325,326,1,0,0,0,326,330,1,0,0,0,327,325,1,0,0,0,328,330,7,3,
        0,0,329,321,1,0,0,0,329,328,1,0,0,0,330,55,1,0,0,0,331,333,7,4,0,
        0,332,331,1,0,0,0,333,334,1,0,0,0,334,332,1,0,0,0,334,335,1,0,0,
        0,335,336,1,0,0,0,336,337,6,27,0,0,337,57,1,0,0,0,338,339,5,60,0,
        0,339,340,5,112,0,0,340,341,5,114,0,0,341,342,5,111,0,0,342,343,
        5,103,0,0,343,344,5,114,0,0,344,345,5,97,0,0,345,346,5,109,0,0,346,
        347,5,62,0,0,347,59,1,0,0,0,348,349,5,60,0,0,349,350,5,47,0,0,350,
        351,5,112,0,0,351,352,5,114,0,0,352,353,5,111,0,0,353,354,5,103,
        0,0,354,355,5,114,0,0,355,356,5,97,0,0,356,357,5,109,0,0,357,358,
        5,62,0,0,358,61,1,0,0,0,359,360,5,60,0,0,360,361,5,47,0,0,361,362,
        1,0,0,0,362,363,3,54,26,0,363,63,1,0,0,0,364,365,5,60,0,0,365,366,
        3,54,26,0,366,65,1,0,0,0,367,368,3,54,26,0,368,67,1,0,0,0,369,370,
        5,99,0,0,370,371,5,111,0,0,371,372,5,110,0,0,372,373,5,100,0,0,373,
        374,5,105,0,0,374,375,5,116,0,0,375,376,5,105,0,0,376,377,5,111,
        0,0,377,378,5,110,0,0,378,379,5,61,0,0,379,69,1,0,0,0,380,381,5,
        62,0,0,381,71,1,0,0,0,382,386,3,54,26,0,383,387,5,61,0,0,384,385,
        5,32,0,0,385,387,5,61,0,0,386,383,1,0,0,0,386,384,1,0,0,0,387,73,
        1,0,0,0,388,389,5,123,0,0,389,390,1,0,0,0,390,391,6,36,1,0,391,75,
        1,0,0,0,392,393,5,44,0,0,393,77,1,0,0,0,394,396,7,4,0,0,395,394,
        1,0,0,0,396,397,1,0,0,0,397,395,1,0,0,0,397,398,1,0,0,0,398,399,
        1,0,0,0,399,400,6,38,0,0,400,79,1,0,0,0,401,402,5,70,0,0,402,403,
        5,97,0,0,403,404,5,108,0,0,404,405,5,115,0,0,405,411,5,101,0,0,406,
        407,5,84,0,0,407,408,5,114,0,0,408,409,5,117,0,0,409,411,5,101,0,
        0,410,401,1,0,0,0,410,406,1,0,0,0,411,81,1,0,0,0,412,413,3,54,26,
        0,413,83,1,0,0,0,414,418,5,34,0,0,415,417,9,0,0,0,416,415,1,0,0,
        0,417,420,1,0,0,0,418,419,1,0,0,0,418,416,1,0,0,0,419,421,1,0,0,
        0,420,418,1,0,0,0,421,422,5,34,0,0,422,85,1,0,0,0,423,424,5,58,0,
        0,424,87,1,0,0,0,425,426,5,40,0,0,426,89,1,0,0,0,427,428,5,41,0,
        0,428,91,1,0,0,0,429,430,5,61,0,0,430,93,1,0,0,0,431,432,5,42,0,
        0,432,95,1,0,0,0,433,434,5,47,0,0,434,97,1,0,0,0,435,436,5,43,0,
        0,436,99,1,0,0,0,437,438,5,45,0,0,438,101,1,0,0,0,439,440,5,37,0,
        0,440,103,1,0,0,0,441,442,5,47,0,0,442,443,5,47,0,0,443,105,1,0,
        0,0,444,445,5,33,0,0,445,107,1,0,0,0,446,447,7,5,0,0,447,109,1,0,
        0,0,448,450,3,108,53,0,449,448,1,0,0,0,450,451,1,0,0,0,451,449,1,
        0,0,0,451,452,1,0,0,0,452,111,1,0,0,0,453,455,3,108,53,0,454,453,
        1,0,0,0,455,456,1,0,0,0,456,454,1,0,0,0,456,457,1,0,0,0,457,458,
        1,0,0,0,458,462,5,46,0,0,459,461,3,108,53,0,460,459,1,0,0,0,461,
        464,1,0,0,0,462,460,1,0,0,0,462,463,1,0,0,0,463,113,1,0,0,0,464,
        462,1,0,0,0,465,466,5,61,0,0,466,475,5,61,0,0,467,468,5,33,0,0,468,
        475,5,61,0,0,469,470,5,62,0,0,470,475,5,61,0,0,471,475,7,6,0,0,472,
        473,5,60,0,0,473,475,5,61,0,0,474,465,1,0,0,0,474,467,1,0,0,0,474,
        469,1,0,0,0,474,471,1,0,0,0,474,472,1,0,0,0,475,115,1,0,0,0,476,
        477,5,38,0,0,477,481,5,38,0,0,478,479,5,124,0,0,479,481,5,124,0,
        0,480,476,1,0,0,0,480,478,1,0,0,0,481,117,1,0,0,0,482,483,5,47,0,
        0,483,487,5,62,0,0,484,485,5,60,0,0,485,487,5,47,0,0,486,482,1,0,
        0,0,486,484,1,0,0,0,487,119,1,0,0,0,488,489,5,47,0,0,489,490,5,42,
        0,0,490,494,1,0,0,0,491,493,9,0,0,0,492,491,1,0,0,0,493,496,1,0,
        0,0,494,495,1,0,0,0,494,492,1,0,0,0,495,497,1,0,0,0,496,494,1,0,
        0,0,497,498,5,42,0,0,498,499,5,47,0,0,499,500,1,0,0,0,500,501,6,
        59,0,0,501,121,1,0,0,0,502,503,5,125,0,0,503,504,1,0,0,0,504,505,
        6,60,2,0,505,123,1,0,0,0,506,507,5,47,0,0,507,508,5,47,0,0,508,512,
        1,0,0,0,509,511,8,0,0,0,510,509,1,0,0,0,511,514,1,0,0,0,512,510,
        1,0,0,0,512,513,1,0,0,0,513,515,1,0,0,0,514,512,1,0,0,0,515,516,
        6,61,0,0,516,125,1,0,0,0,19,0,1,302,316,325,329,334,386,397,410,
        418,451,456,462,474,480,486,494,512,3,6,0,0,5,1,0,5,0,0
    ]

class ignoreLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    expr = 1

    IF_TAG = 1
    IF_END = 2
    ELIF_END = 3
    ELIF_TAG = 4
    ELSE = 5
    ELSE_END = 6
    VAR_DECL_START = 7
    VAR_DECL_END = 8
    VAR_DECL_TYPE = 9
    VAR_DECL = 10
    WHILE_TAG = 11
    WHILE_END = 12
    BREAK = 13
    FOR_TAG = 14
    FOR_END = 15
    FUNCTION_TAG_OPEN = 16
    FUNCTION_TAG_END = 17
    RETURN_TAG = 18
    RETURN_END = 19
    FUNCTION_NAME = 20
    FUNCTION_RET_TYPE = 21
    FUNCTION_PARAM = 22
    COMMENT = 23
    LINE_COMMENT = 24
    WS = 25
    OPEN_PROGRAM = 26
    CLOSE_PROGRAM = 27
    CLOSE_TAG = 28
    OPEN_TAG = 29
    TAG_REFERENCE = 30
    CONDITION_EQ = 31
    END_TAG = 32
    PROPERTY_NAME = 33
    OPEN_CURLY = 34
    COMMA = 35
    EXPR_WS = 36
    LITERAL_BOOL = 37
    NAME = 38
    LITERAL_STRING = 39
    COLON = 40
    OPEN_PAREN = 41
    CLOSE_PAREN = 42
    EQUALS = 43
    MUL = 44
    DIV = 45
    ADD = 46
    SUB = 47
    MOD = 48
    INT_DIV = 49
    NOT = 50
    LITERAL_INT = 51
    LITERAL_FLOAT = 52
    OPERATOR_COMPARE = 53
    OPERATOR_LOGIC = 54
    ILLEGAL = 55
    EXPR_COMMENT = 56
    CLOSE_CURLY = 57
    EXPR_LINE_COMMENT = 58

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "expr" ]

    literalNames = [ "<INVALID>",
            "'<if'", "'</if>'", "'</elif>'", "'<elif'", "'<else>'", "'</else>'", 
            "'<var'", "'</var>'", "'<while'", "'</while>'", "'<for'", "'</for>'", 
            "'<function'", "'</function>'", "'<return>'", "'</return>'", 
            "'<program>'", "'</program>'", "'condition='", "'>'", "'{'", 
            "','", "':'", "'('", "')'", "'='", "'*'", "'/'", "'+'", "'-'", 
            "'%'", "'//'", "'!'", "'}'" ]

    symbolicNames = [ "<INVALID>",
            "IF_TAG", "IF_END", "ELIF_END", "ELIF_TAG", "ELSE", "ELSE_END", 
            "VAR_DECL_START", "VAR_DECL_END", "VAR_DECL_TYPE", "VAR_DECL", 
            "WHILE_TAG", "WHILE_END", "BREAK", "FOR_TAG", "FOR_END", "FUNCTION_TAG_OPEN", 
            "FUNCTION_TAG_END", "RETURN_TAG", "RETURN_END", "FUNCTION_NAME", 
            "FUNCTION_RET_TYPE", "FUNCTION_PARAM", "COMMENT", "LINE_COMMENT", 
            "WS", "OPEN_PROGRAM", "CLOSE_PROGRAM", "CLOSE_TAG", "OPEN_TAG", 
            "TAG_REFERENCE", "CONDITION_EQ", "END_TAG", "PROPERTY_NAME", 
            "OPEN_CURLY", "COMMA", "EXPR_WS", "LITERAL_BOOL", "NAME", "LITERAL_STRING", 
            "COLON", "OPEN_PAREN", "CLOSE_PAREN", "EQUALS", "MUL", "DIV", 
            "ADD", "SUB", "MOD", "INT_DIV", "NOT", "LITERAL_INT", "LITERAL_FLOAT", 
            "OPERATOR_COMPARE", "OPERATOR_LOGIC", "ILLEGAL", "EXPR_COMMENT", 
            "CLOSE_CURLY", "EXPR_LINE_COMMENT" ]

    ruleNames = [ "IF_TAG", "IF_END", "ELIF_END", "ELIF_TAG", "ELSE", "ELSE_END", 
                  "VAR_DECL_START", "VAR_DECL_END", "VAR_DECL_TYPE", "VAR_DECL", 
                  "WHILE_TAG", "WHILE_END", "BREAK_START", "BREAK_END", 
                  "BREAK", "FOR_TAG", "FOR_END", "FUNCTION_TAG_OPEN", "FUNCTION_TAG_END", 
                  "RETURN_TAG", "RETURN_END", "FUNCTION_NAME", "FUNCTION_RET_TYPE", 
                  "FUNCTION_PARAM", "COMMENT", "LINE_COMMENT", "ID", "WS", 
                  "OPEN_PROGRAM", "CLOSE_PROGRAM", "CLOSE_TAG", "OPEN_TAG", 
                  "TAG_REFERENCE", "CONDITION_EQ", "END_TAG", "PROPERTY_NAME", 
                  "OPEN_CURLY", "COMMA", "EXPR_WS", "LITERAL_BOOL", "NAME", 
                  "LITERAL_STRING", "COLON", "OPEN_PAREN", "CLOSE_PAREN", 
                  "EQUALS", "MUL", "DIV", "ADD", "SUB", "MOD", "INT_DIV", 
                  "NOT", "DIGIT", "LITERAL_INT", "LITERAL_FLOAT", "OPERATOR_COMPARE", 
                  "OPERATOR_LOGIC", "ILLEGAL", "EXPR_COMMENT", "CLOSE_CURLY", 
                  "EXPR_LINE_COMMENT" ]

    grammarFileName = "ignoreLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


