# Generated from src/grammar/ignoreLexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,57,519,6,-1,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,
        7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
        2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,
        7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,
        2,26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,
        7,32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,
        2,39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,
        7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,
        2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,
        7,58,2,59,7,59,2,60,7,60,2,61,7,61,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,
        2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,
        5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,
        7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,
        10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,12,1,12,1,
        12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
        13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,16,1,16,1,
        16,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,
        19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,
        20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,
        21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,
        22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,
        24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,
        25,1,25,1,26,1,26,1,26,1,26,5,26,305,8,26,10,26,12,26,308,9,26,1,
        26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,5,27,319,8,27,10,27,12,
        27,322,9,27,1,27,1,27,1,28,1,28,5,28,328,8,28,10,28,12,28,331,9,
        28,1,28,3,28,334,8,28,1,29,4,29,337,8,29,11,29,12,29,338,1,29,1,
        29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,
        31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,
        32,1,33,1,33,1,33,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,
        35,1,35,1,35,1,35,1,36,1,36,1,37,1,37,1,37,1,37,3,37,391,8,37,1,
        38,1,38,1,38,1,38,1,39,1,39,1,40,4,40,400,8,40,11,40,12,40,401,1,
        40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,3,41,415,8,
        41,1,42,1,42,1,43,1,43,5,43,421,8,43,10,43,12,43,424,9,43,1,43,1,
        43,1,44,1,44,1,45,1,45,1,46,1,46,1,47,3,47,435,8,47,1,47,4,47,438,
        8,47,11,47,12,47,439,1,48,3,48,443,8,48,1,48,4,48,446,8,48,11,48,
        12,48,447,1,48,1,48,5,48,452,8,48,10,48,12,48,455,9,48,1,49,1,49,
        1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,55,
        1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,3,57,483,
        8,57,1,58,1,58,1,58,1,58,3,58,489,8,58,1,59,1,59,1,59,1,59,5,59,
        495,8,59,10,59,12,59,498,9,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,
        1,60,1,60,1,61,1,61,1,61,1,61,5,61,513,8,61,10,61,12,61,516,9,61,
        1,61,1,61,3,306,422,496,0,62,2,0,4,0,6,1,8,2,10,3,12,4,14,5,16,6,
        18,7,20,8,22,9,24,10,26,11,28,12,30,0,32,0,34,13,36,14,38,15,40,
        16,42,17,44,18,46,19,48,20,50,21,52,22,54,23,56,24,58,0,60,25,62,
        26,64,27,66,28,68,29,70,30,72,31,74,32,76,33,78,34,80,35,82,36,84,
        37,86,38,88,39,90,40,92,41,94,42,96,43,98,44,100,45,102,46,104,47,
        106,48,108,49,110,50,112,51,114,52,116,53,118,54,120,55,122,56,124,
        57,2,0,1,7,1,0,48,57,2,0,10,10,13,13,2,0,65,90,97,122,4,0,48,57,
        65,90,95,95,97,122,82,0,32,32,8986,8987,9193,9196,9200,9200,9203,
        9203,9725,9726,9748,9749,9800,9811,9855,9855,9875,9875,9889,9889,
        9898,9899,9917,9918,9924,9925,9934,9934,9940,9940,9962,9962,9970,
        9971,9973,9973,9978,9978,9981,9981,9989,9989,9994,9995,10024,10024,
        10060,10060,10062,10062,10067,10069,10071,10071,10133,10135,10160,
        10160,10175,10175,11035,11036,11088,11088,11093,11093,126980,126980,
        127183,127183,127374,127374,127377,127386,127462,127487,127489,127489,
        127514,127514,127535,127535,127538,127542,127544,127546,127568,127569,
        127744,127776,127789,127797,127799,127868,127870,127891,127904,127946,
        127951,127955,127968,127984,127988,127988,127992,128062,128064,128064,
        128066,128252,128255,128317,128331,128334,128336,128359,128378,128378,
        128405,128406,128420,128420,128507,128591,128640,128709,128716,128716,
        128720,128722,128725,128727,128732,128735,128747,128748,128756,128764,
        128992,129003,129008,129008,129292,129338,129340,129349,129351,129535,
        129648,129660,129664,129672,129680,129725,129727,129733,129742,129755,
        129760,129768,129776,129784,3,0,9,10,13,13,32,32,2,0,60,60,62,62,
        533,0,6,1,0,0,0,0,8,1,0,0,0,0,10,1,0,0,0,0,12,1,0,0,0,0,14,1,0,0,
        0,0,16,1,0,0,0,0,18,1,0,0,0,0,20,1,0,0,0,0,22,1,0,0,0,0,24,1,0,0,
        0,0,26,1,0,0,0,0,28,1,0,0,0,0,34,1,0,0,0,0,36,1,0,0,0,0,38,1,0,0,
        0,0,40,1,0,0,0,0,42,1,0,0,0,0,44,1,0,0,0,0,46,1,0,0,0,0,48,1,0,0,
        0,0,50,1,0,0,0,0,52,1,0,0,0,0,54,1,0,0,0,0,56,1,0,0,0,0,60,1,0,0,
        0,0,62,1,0,0,0,0,64,1,0,0,0,0,66,1,0,0,0,0,68,1,0,0,0,0,70,1,0,0,
        0,0,72,1,0,0,0,0,74,1,0,0,0,0,76,1,0,0,0,0,78,1,0,0,0,1,80,1,0,0,
        0,1,82,1,0,0,0,1,84,1,0,0,0,1,86,1,0,0,0,1,88,1,0,0,0,1,90,1,0,0,
        0,1,92,1,0,0,0,1,94,1,0,0,0,1,96,1,0,0,0,1,98,1,0,0,0,1,100,1,0,
        0,0,1,102,1,0,0,0,1,104,1,0,0,0,1,106,1,0,0,0,1,108,1,0,0,0,1,110,
        1,0,0,0,1,112,1,0,0,0,1,114,1,0,0,0,1,116,1,0,0,0,1,118,1,0,0,0,
        1,120,1,0,0,0,1,122,1,0,0,0,1,124,1,0,0,0,2,126,1,0,0,0,4,128,1,
        0,0,0,6,130,1,0,0,0,8,134,1,0,0,0,10,140,1,0,0,0,12,148,1,0,0,0,
        14,154,1,0,0,0,16,161,1,0,0,0,18,169,1,0,0,0,20,174,1,0,0,0,22,181,
        1,0,0,0,24,189,1,0,0,0,26,192,1,0,0,0,28,199,1,0,0,0,30,208,1,0,
        0,0,32,215,1,0,0,0,34,218,1,0,0,0,36,221,1,0,0,0,38,226,1,0,0,0,
        40,233,1,0,0,0,42,243,1,0,0,0,44,255,1,0,0,0,46,264,1,0,0,0,48,274,
        1,0,0,0,50,282,1,0,0,0,52,296,1,0,0,0,54,300,1,0,0,0,56,314,1,0,
        0,0,58,333,1,0,0,0,60,336,1,0,0,0,62,342,1,0,0,0,64,352,1,0,0,0,
        66,363,1,0,0,0,68,368,1,0,0,0,70,371,1,0,0,0,72,373,1,0,0,0,74,384,
        1,0,0,0,76,386,1,0,0,0,78,392,1,0,0,0,80,396,1,0,0,0,82,399,1,0,
        0,0,84,414,1,0,0,0,86,416,1,0,0,0,88,418,1,0,0,0,90,427,1,0,0,0,
        92,429,1,0,0,0,94,431,1,0,0,0,96,434,1,0,0,0,98,442,1,0,0,0,100,
        456,1,0,0,0,102,458,1,0,0,0,104,460,1,0,0,0,106,462,1,0,0,0,108,
        464,1,0,0,0,110,466,1,0,0,0,112,468,1,0,0,0,114,471,1,0,0,0,116,
        482,1,0,0,0,118,488,1,0,0,0,120,490,1,0,0,0,122,504,1,0,0,0,124,
        508,1,0,0,0,126,127,7,0,0,0,127,3,1,0,0,0,128,129,5,45,0,0,129,5,
        1,0,0,0,130,131,5,60,0,0,131,132,5,105,0,0,132,133,5,102,0,0,133,
        7,1,0,0,0,134,135,5,60,0,0,135,136,5,47,0,0,136,137,5,105,0,0,137,
        138,5,102,0,0,138,139,5,62,0,0,139,9,1,0,0,0,140,141,5,60,0,0,141,
        142,5,47,0,0,142,143,5,101,0,0,143,144,5,108,0,0,144,145,5,105,0,
        0,145,146,5,102,0,0,146,147,5,62,0,0,147,11,1,0,0,0,148,149,5,60,
        0,0,149,150,5,101,0,0,150,151,5,108,0,0,151,152,5,105,0,0,152,153,
        5,102,0,0,153,13,1,0,0,0,154,155,5,60,0,0,155,156,5,101,0,0,156,
        157,5,108,0,0,157,158,5,115,0,0,158,159,5,101,0,0,159,160,5,62,0,
        0,160,15,1,0,0,0,161,162,5,60,0,0,162,163,5,47,0,0,163,164,5,101,
        0,0,164,165,5,108,0,0,165,166,5,115,0,0,166,167,5,101,0,0,167,168,
        5,62,0,0,168,17,1,0,0,0,169,170,5,60,0,0,170,171,5,118,0,0,171,172,
        5,97,0,0,172,173,5,114,0,0,173,19,1,0,0,0,174,175,5,60,0,0,175,176,
        5,47,0,0,176,177,5,118,0,0,177,178,5,97,0,0,178,179,5,114,0,0,179,
        180,5,62,0,0,180,21,1,0,0,0,181,182,5,116,0,0,182,183,5,121,0,0,
        183,184,5,112,0,0,184,185,5,101,0,0,185,186,5,61,0,0,186,187,1,0,
        0,0,187,188,3,58,28,0,188,23,1,0,0,0,189,190,3,18,8,0,190,191,3,
        58,28,0,191,25,1,0,0,0,192,193,5,60,0,0,193,194,5,119,0,0,194,195,
        5,104,0,0,195,196,5,105,0,0,196,197,5,108,0,0,197,198,5,101,0,0,
        198,27,1,0,0,0,199,200,5,60,0,0,200,201,5,47,0,0,201,202,5,119,0,
        0,202,203,5,104,0,0,203,204,5,105,0,0,204,205,5,108,0,0,205,206,
        5,101,0,0,206,207,5,62,0,0,207,29,1,0,0,0,208,209,5,60,0,0,209,210,
        5,98,0,0,210,211,5,114,0,0,211,212,5,101,0,0,212,213,5,97,0,0,213,
        214,5,107,0,0,214,31,1,0,0,0,215,216,5,47,0,0,216,217,5,62,0,0,217,
        33,1,0,0,0,218,219,3,30,14,0,219,220,3,32,15,0,220,35,1,0,0,0,221,
        222,5,60,0,0,222,223,5,102,0,0,223,224,5,111,0,0,224,225,5,114,0,
        0,225,37,1,0,0,0,226,227,5,60,0,0,227,228,5,47,0,0,228,229,5,102,
        0,0,229,230,5,111,0,0,230,231,5,114,0,0,231,232,5,62,0,0,232,39,
        1,0,0,0,233,234,5,60,0,0,234,235,5,102,0,0,235,236,5,117,0,0,236,
        237,5,110,0,0,237,238,5,99,0,0,238,239,5,116,0,0,239,240,5,105,0,
        0,240,241,5,111,0,0,241,242,5,110,0,0,242,41,1,0,0,0,243,244,5,60,
        0,0,244,245,5,47,0,0,245,246,5,102,0,0,246,247,5,117,0,0,247,248,
        5,110,0,0,248,249,5,99,0,0,249,250,5,116,0,0,250,251,5,105,0,0,251,
        252,5,111,0,0,252,253,5,110,0,0,253,254,5,62,0,0,254,43,1,0,0,0,
        255,256,5,60,0,0,256,257,5,114,0,0,257,258,5,101,0,0,258,259,5,116,
        0,0,259,260,5,117,0,0,260,261,5,114,0,0,261,262,5,110,0,0,262,263,
        5,62,0,0,263,45,1,0,0,0,264,265,5,60,0,0,265,266,5,47,0,0,266,267,
        5,114,0,0,267,268,5,101,0,0,268,269,5,116,0,0,269,270,5,117,0,0,
        270,271,5,114,0,0,271,272,5,110,0,0,272,273,5,62,0,0,273,47,1,0,
        0,0,274,275,5,110,0,0,275,276,5,97,0,0,276,277,5,109,0,0,277,278,
        5,101,0,0,278,279,5,61,0,0,279,280,1,0,0,0,280,281,3,58,28,0,281,
        49,1,0,0,0,282,283,5,114,0,0,283,284,5,101,0,0,284,285,5,116,0,0,
        285,286,5,117,0,0,286,287,5,114,0,0,287,288,5,110,0,0,288,289,5,
        84,0,0,289,290,5,121,0,0,290,291,5,112,0,0,291,292,5,101,0,0,292,
        293,5,61,0,0,293,294,1,0,0,0,294,295,3,58,28,0,295,51,1,0,0,0,296,
        297,3,58,28,0,297,298,5,58,0,0,298,299,3,58,28,0,299,53,1,0,0,0,
        300,301,5,47,0,0,301,302,5,42,0,0,302,306,1,0,0,0,303,305,9,0,0,
        0,304,303,1,0,0,0,305,308,1,0,0,0,306,307,1,0,0,0,306,304,1,0,0,
        0,307,309,1,0,0,0,308,306,1,0,0,0,309,310,5,42,0,0,310,311,5,47,
        0,0,311,312,1,0,0,0,312,313,6,26,0,0,313,55,1,0,0,0,314,315,5,47,
        0,0,315,316,5,47,0,0,316,320,1,0,0,0,317,319,8,1,0,0,318,317,1,0,
        0,0,319,322,1,0,0,0,320,318,1,0,0,0,320,321,1,0,0,0,321,323,1,0,
        0,0,322,320,1,0,0,0,323,324,6,27,0,0,324,57,1,0,0,0,325,329,7,2,
        0,0,326,328,7,3,0,0,327,326,1,0,0,0,328,331,1,0,0,0,329,327,1,0,
        0,0,329,330,1,0,0,0,330,334,1,0,0,0,331,329,1,0,0,0,332,334,7,4,
        0,0,333,325,1,0,0,0,333,332,1,0,0,0,334,59,1,0,0,0,335,337,7,5,0,
        0,336,335,1,0,0,0,337,338,1,0,0,0,338,336,1,0,0,0,338,339,1,0,0,
        0,339,340,1,0,0,0,340,341,6,29,0,0,341,61,1,0,0,0,342,343,5,60,0,
        0,343,344,5,112,0,0,344,345,5,114,0,0,345,346,5,111,0,0,346,347,
        5,103,0,0,347,348,5,114,0,0,348,349,5,97,0,0,349,350,5,109,0,0,350,
        351,5,62,0,0,351,63,1,0,0,0,352,353,5,60,0,0,353,354,5,47,0,0,354,
        355,5,112,0,0,355,356,5,114,0,0,356,357,5,111,0,0,357,358,5,103,
        0,0,358,359,5,114,0,0,359,360,5,97,0,0,360,361,5,109,0,0,361,362,
        5,62,0,0,362,65,1,0,0,0,363,364,5,60,0,0,364,365,5,47,0,0,365,366,
        1,0,0,0,366,367,3,58,28,0,367,67,1,0,0,0,368,369,5,60,0,0,369,370,
        3,58,28,0,370,69,1,0,0,0,371,372,3,58,28,0,372,71,1,0,0,0,373,374,
        5,99,0,0,374,375,5,111,0,0,375,376,5,110,0,0,376,377,5,100,0,0,377,
        378,5,105,0,0,378,379,5,116,0,0,379,380,5,105,0,0,380,381,5,111,
        0,0,381,382,5,110,0,0,382,383,5,61,0,0,383,73,1,0,0,0,384,385,5,
        62,0,0,385,75,1,0,0,0,386,390,3,58,28,0,387,391,5,61,0,0,388,389,
        5,32,0,0,389,391,5,61,0,0,390,387,1,0,0,0,390,388,1,0,0,0,391,77,
        1,0,0,0,392,393,5,123,0,0,393,394,1,0,0,0,394,395,6,38,1,0,395,79,
        1,0,0,0,396,397,5,44,0,0,397,81,1,0,0,0,398,400,7,5,0,0,399,398,
        1,0,0,0,400,401,1,0,0,0,401,399,1,0,0,0,401,402,1,0,0,0,402,403,
        1,0,0,0,403,404,6,40,0,0,404,83,1,0,0,0,405,406,5,70,0,0,406,407,
        5,97,0,0,407,408,5,108,0,0,408,409,5,115,0,0,409,415,5,101,0,0,410,
        411,5,84,0,0,411,412,5,114,0,0,412,413,5,117,0,0,413,415,5,101,0,
        0,414,405,1,0,0,0,414,410,1,0,0,0,415,85,1,0,0,0,416,417,3,58,28,
        0,417,87,1,0,0,0,418,422,5,34,0,0,419,421,9,0,0,0,420,419,1,0,0,
        0,421,424,1,0,0,0,422,423,1,0,0,0,422,420,1,0,0,0,423,425,1,0,0,
        0,424,422,1,0,0,0,425,426,5,34,0,0,426,89,1,0,0,0,427,428,5,58,0,
        0,428,91,1,0,0,0,429,430,5,40,0,0,430,93,1,0,0,0,431,432,5,41,0,
        0,432,95,1,0,0,0,433,435,3,4,1,0,434,433,1,0,0,0,434,435,1,0,0,0,
        435,437,1,0,0,0,436,438,3,2,0,0,437,436,1,0,0,0,438,439,1,0,0,0,
        439,437,1,0,0,0,439,440,1,0,0,0,440,97,1,0,0,0,441,443,3,4,1,0,442,
        441,1,0,0,0,442,443,1,0,0,0,443,445,1,0,0,0,444,446,3,2,0,0,445,
        444,1,0,0,0,446,447,1,0,0,0,447,445,1,0,0,0,447,448,1,0,0,0,448,
        449,1,0,0,0,449,453,5,46,0,0,450,452,3,2,0,0,451,450,1,0,0,0,452,
        455,1,0,0,0,453,451,1,0,0,0,453,454,1,0,0,0,454,99,1,0,0,0,455,453,
        1,0,0,0,456,457,5,61,0,0,457,101,1,0,0,0,458,459,5,42,0,0,459,103,
        1,0,0,0,460,461,5,47,0,0,461,105,1,0,0,0,462,463,5,43,0,0,463,107,
        1,0,0,0,464,465,5,45,0,0,465,109,1,0,0,0,466,467,5,37,0,0,467,111,
        1,0,0,0,468,469,5,47,0,0,469,470,5,47,0,0,470,113,1,0,0,0,471,472,
        5,33,0,0,472,115,1,0,0,0,473,474,5,61,0,0,474,483,5,61,0,0,475,476,
        5,33,0,0,476,483,5,61,0,0,477,478,5,62,0,0,478,483,5,61,0,0,479,
        483,7,6,0,0,480,481,5,60,0,0,481,483,5,61,0,0,482,473,1,0,0,0,482,
        475,1,0,0,0,482,477,1,0,0,0,482,479,1,0,0,0,482,480,1,0,0,0,483,
        117,1,0,0,0,484,485,5,38,0,0,485,489,5,38,0,0,486,487,5,124,0,0,
        487,489,5,124,0,0,488,484,1,0,0,0,488,486,1,0,0,0,489,119,1,0,0,
        0,490,491,5,47,0,0,491,492,5,42,0,0,492,496,1,0,0,0,493,495,9,0,
        0,0,494,493,1,0,0,0,495,498,1,0,0,0,496,497,1,0,0,0,496,494,1,0,
        0,0,497,499,1,0,0,0,498,496,1,0,0,0,499,500,5,42,0,0,500,501,5,47,
        0,0,501,502,1,0,0,0,502,503,6,59,0,0,503,121,1,0,0,0,504,505,5,125,
        0,0,505,506,1,0,0,0,506,507,6,60,2,0,507,123,1,0,0,0,508,509,5,47,
        0,0,509,510,5,47,0,0,510,514,1,0,0,0,511,513,8,1,0,0,512,511,1,0,
        0,0,513,516,1,0,0,0,514,512,1,0,0,0,514,515,1,0,0,0,515,517,1,0,
        0,0,516,514,1,0,0,0,517,518,6,61,0,0,518,125,1,0,0,0,20,0,1,306,
        320,329,333,338,390,401,414,422,434,439,442,447,453,482,488,496,
        514,3,6,0,0,5,1,0,5,0,0
    ]

class ignoreLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    expr = 1

    IF_TAG = 1
    IF_END = 2
    ELIF_END = 3
    ELIF_TAG = 4
    ELSE = 5
    ELSE_END = 6
    VAR_DECL_START = 7
    VAR_DECL_END = 8
    VAR_DECL_TYPE = 9
    VAR_DECL = 10
    WHILE_TAG = 11
    WHILE_END = 12
    BREAK = 13
    FOR_TAG = 14
    FOR_END = 15
    FUNCTION_TAG_OPEN = 16
    FUNCTION_TAG_END = 17
    RETURN_TAG = 18
    RETURN_END = 19
    FUNCTION_NAME = 20
    FUNCTION_RET_TYPE = 21
    FUNCTION_PARAM = 22
    COMMENT = 23
    LINE_COMMENT = 24
    WS = 25
    OPEN_PROGRAM = 26
    CLOSE_PROGRAM = 27
    CLOSE_TAG = 28
    OPEN_TAG = 29
    TAG_REFERENCE = 30
    CONDITION_EQ = 31
    END_TAG = 32
    PROPERTY_NAME = 33
    OPEN_CURLY = 34
    COMMA = 35
    EXPR_WS = 36
    LITERAL_BOOL = 37
    NAME = 38
    LITERAL_STRING = 39
    COLON = 40
    OPEN_PAREN = 41
    CLOSE_PAREN = 42
    LITERAL_INT = 43
    LITERAL_FLOAT = 44
    EQUALS = 45
    MUL = 46
    DIV = 47
    ADD = 48
    SUB = 49
    MOD = 50
    INT_DIV = 51
    NOT = 52
    OPERATOR_COMPARE = 53
    OPERATOR_LOGIC = 54
    EXPR_COMMENT = 55
    CLOSE_CURLY = 56
    EXPR_LINE_COMMENT = 57

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE", "expr" ]

    literalNames = [ "<INVALID>",
            "'<if'", "'</if>'", "'</elif>'", "'<elif'", "'<else>'", "'</else>'", 
            "'<var'", "'</var>'", "'<while'", "'</while>'", "'<for'", "'</for>'", 
            "'<function'", "'</function>'", "'<return>'", "'</return>'", 
            "'<program>'", "'</program>'", "'condition='", "'>'", "'{'", 
            "','", "':'", "'('", "')'", "'='", "'*'", "'/'", "'+'", "'-'", 
            "'%'", "'//'", "'!'", "'}'" ]

    symbolicNames = [ "<INVALID>",
            "IF_TAG", "IF_END", "ELIF_END", "ELIF_TAG", "ELSE", "ELSE_END", 
            "VAR_DECL_START", "VAR_DECL_END", "VAR_DECL_TYPE", "VAR_DECL", 
            "WHILE_TAG", "WHILE_END", "BREAK", "FOR_TAG", "FOR_END", "FUNCTION_TAG_OPEN", 
            "FUNCTION_TAG_END", "RETURN_TAG", "RETURN_END", "FUNCTION_NAME", 
            "FUNCTION_RET_TYPE", "FUNCTION_PARAM", "COMMENT", "LINE_COMMENT", 
            "WS", "OPEN_PROGRAM", "CLOSE_PROGRAM", "CLOSE_TAG", "OPEN_TAG", 
            "TAG_REFERENCE", "CONDITION_EQ", "END_TAG", "PROPERTY_NAME", 
            "OPEN_CURLY", "COMMA", "EXPR_WS", "LITERAL_BOOL", "NAME", "LITERAL_STRING", 
            "COLON", "OPEN_PAREN", "CLOSE_PAREN", "LITERAL_INT", "LITERAL_FLOAT", 
            "EQUALS", "MUL", "DIV", "ADD", "SUB", "MOD", "INT_DIV", "NOT", 
            "OPERATOR_COMPARE", "OPERATOR_LOGIC", "EXPR_COMMENT", "CLOSE_CURLY", 
            "EXPR_LINE_COMMENT" ]

    ruleNames = [ "DIGIT", "NEGATIVE_SIGN", "IF_TAG", "IF_END", "ELIF_END", 
                  "ELIF_TAG", "ELSE", "ELSE_END", "VAR_DECL_START", "VAR_DECL_END", 
                  "VAR_DECL_TYPE", "VAR_DECL", "WHILE_TAG", "WHILE_END", 
                  "BREAK_START", "BREAK_END", "BREAK", "FOR_TAG", "FOR_END", 
                  "FUNCTION_TAG_OPEN", "FUNCTION_TAG_END", "RETURN_TAG", 
                  "RETURN_END", "FUNCTION_NAME", "FUNCTION_RET_TYPE", "FUNCTION_PARAM", 
                  "COMMENT", "LINE_COMMENT", "ID", "WS", "OPEN_PROGRAM", 
                  "CLOSE_PROGRAM", "CLOSE_TAG", "OPEN_TAG", "TAG_REFERENCE", 
                  "CONDITION_EQ", "END_TAG", "PROPERTY_NAME", "OPEN_CURLY", 
                  "COMMA", "EXPR_WS", "LITERAL_BOOL", "NAME", "LITERAL_STRING", 
                  "COLON", "OPEN_PAREN", "CLOSE_PAREN", "LITERAL_INT", "LITERAL_FLOAT", 
                  "EQUALS", "MUL", "DIV", "ADD", "SUB", "MOD", "INT_DIV", 
                  "NOT", "OPERATOR_COMPARE", "OPERATOR_LOGIC", "EXPR_COMMENT", 
                  "CLOSE_CURLY", "EXPR_LINE_COMMENT" ]

    grammarFileName = "ignoreLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


